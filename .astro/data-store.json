[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.1.0","content-config-digest","92c99e7686eaace5","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://hiteacheryourare.github.io\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":\"shiki\",\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false},\"legacy\":{\"collections\":false}}","blog",["Map",11,12,43,44,72,73,107,108,136,137,180,181,207,208,233,234],"stop-glamorizing-things-that-are-painful",{"id":11,"data":13,"body":21,"filePath":22,"digest":23,"rendered":24},{"title":14,"author":15,"description":16,"pubDate":17,"heroImage":18},"Stop Glamorizing Things that are Painful","Ryan Mullin","Please.","June 16 2024",{"src":19,"alt":20},"https://th.bing.com/th/id/OIP.EuwWPN_prsEwo-1XVnXFfQHaEK?rs=1&pid=ImgDetMain","UV Index Chart","Society as a whole needs to stop glamorizing things that aren't meant to be glamorized. Some of it might be painless, and other things might actually cause physical harm. For the past while, I've collected my thoughts on this matter and will demonstrate it through multiple examples.\n\n## Studying\nStudying is meant to be something that you _have_ to do, not something that you _want_ to do. Yes, there is something to making sure you're comfortable for a lengthy study session, but let's not go overboard with it. I hate to break it to you, but no, your camel milk matcha latte, iPad Pro with keyboard, stacks of books with neatly organized index cards, \"aesthetic\" Notion boards, and fancy library settings will **not** get you higher grades! In fact, it might actually result in lower grades because of all the time you're spending on doing all this extraneous stuff to make it **look** like you're \"lost in study\" when really, you're nothing more than stuck at the surface level.\n\n![aesthetic studying](https://i.pinimg.com/474x/cd/e0/af/cde0af3d79e12d2ae8577b35fdc5d193.jpg)\n\n### Now for a small sidetrack about the word \"aesthetic\"\n\nThe word \"aesthetic\" has lost all of its meaning and it really makes me angry. It used to be a word that was modified by an adjective like \"oh, this room has such a chill aesthetic to it.\" But in today's world, it's taken on a whole different meaning. I blame it on TikTok and their glamorization of everything, to be honest. Now, the meaning of aesthetic has changed to an adjective itself. You'll hear sentences like \"oh, my Notion board is so aesthetic.\" What does that even mean? What kind of aesthetic?\n\nIn fact, I looked up \"aesthetic studying\" on Google Images, and the image you see above came up. This is what I mean. I hate it.\n\n## Burnout\nBurnout is not something you should be aspiring for. Yes, it will become necessary sometimes to work extra hard to get something done in time, but you should be resting for an equivalent amount of time afterward to make up for it! You shouldn't be bragging to others about how you worked so hard you sacrificed your mental and physical well-being to get something done. I bet others would be more impressed when you're on vacation relaxing because you got the work done in a timely manner while they're in crunch mode trying to rush to finish it. Just a thought.\n\n## The UV Index\n\nFinally, the reason I decided to write this article. I came across one too many TikToks of women talking about how much they love their high UV indices. Little do they know (or possibly they do know) that the UV index is a rating of how intense the sun's **radiation** is. Higher UV indices mean you have a higher chance of getting **radiation poisoning** from the sun.\n\nLet's put this in a different context. Let's say we're taking a trip to Chernobyl. I'm gonna make up an index that reports how intense the radioactivity of the site is on a given day (let's call it the CH Index).\n\nI'm almost certain the same women who gush at the sight of a UV index over 7 would scream at the sight of a CH index at an equivalent level. Why the difference? Because the UV rays from the sun come with being tan. That's literally the only difference. You're still running a very high risk of radiation poisoning and skin cancer. Both of which are no joke.\n\n---\n\nSave yourself the trouble. Don't glamorize these things. For your own safety.\n\nWear some sunblock.","src/content/blog/stop-glamorizing-things-that-are-painful.md","596e431361732fd1",{"html":25,"metadata":26},"\u003Cp>Society as a whole needs to stop glamorizing things that aren’t meant to be glamorized. Some of it might be painless, and other things might actually cause physical harm. For the past while, I’ve collected my thoughts on this matter and will demonstrate it through multiple examples.\u003C/p>\n\u003Ch2 id=\"studying\">Studying\u003C/h2>\n\u003Cp>Studying is meant to be something that you \u003Cem>have\u003C/em> to do, not something that you \u003Cem>want\u003C/em> to do. Yes, there is something to making sure you’re comfortable for a lengthy study session, but let’s not go overboard with it. I hate to break it to you, but no, your camel milk matcha latte, iPad Pro with keyboard, stacks of books with neatly organized index cards, “aesthetic” Notion boards, and fancy library settings will \u003Cstrong>not\u003C/strong> get you higher grades! In fact, it might actually result in lower grades because of all the time you’re spending on doing all this extraneous stuff to make it \u003Cstrong>look\u003C/strong> like you’re “lost in study” when really, you’re nothing more than stuck at the surface level.\u003C/p>\n\u003Cp>\u003Cimg src=\"https://i.pinimg.com/474x/cd/e0/af/cde0af3d79e12d2ae8577b35fdc5d193.jpg\" alt=\"aesthetic studying\">\u003C/p>\n\u003Ch3 id=\"now-for-a-small-sidetrack-about-the-word-aesthetic\">Now for a small sidetrack about the word “aesthetic”\u003C/h3>\n\u003Cp>The word “aesthetic” has lost all of its meaning and it really makes me angry. It used to be a word that was modified by an adjective like “oh, this room has such a chill aesthetic to it.” But in today’s world, it’s taken on a whole different meaning. I blame it on TikTok and their glamorization of everything, to be honest. Now, the meaning of aesthetic has changed to an adjective itself. You’ll hear sentences like “oh, my Notion board is so aesthetic.” What does that even mean? What kind of aesthetic?\u003C/p>\n\u003Cp>In fact, I looked up “aesthetic studying” on Google Images, and the image you see above came up. This is what I mean. I hate it.\u003C/p>\n\u003Ch2 id=\"burnout\">Burnout\u003C/h2>\n\u003Cp>Burnout is not something you should be aspiring for. Yes, it will become necessary sometimes to work extra hard to get something done in time, but you should be resting for an equivalent amount of time afterward to make up for it! You shouldn’t be bragging to others about how you worked so hard you sacrificed your mental and physical well-being to get something done. I bet others would be more impressed when you’re on vacation relaxing because you got the work done in a timely manner while they’re in crunch mode trying to rush to finish it. Just a thought.\u003C/p>\n\u003Ch2 id=\"the-uv-index\">The UV Index\u003C/h2>\n\u003Cp>Finally, the reason I decided to write this article. I came across one too many TikToks of women talking about how much they love their high UV indices. Little do they know (or possibly they do know) that the UV index is a rating of how intense the sun’s \u003Cstrong>radiation\u003C/strong> is. Higher UV indices mean you have a higher chance of getting \u003Cstrong>radiation poisoning\u003C/strong> from the sun.\u003C/p>\n\u003Cp>Let’s put this in a different context. Let’s say we’re taking a trip to Chernobyl. I’m gonna make up an index that reports how intense the radioactivity of the site is on a given day (let’s call it the CH Index).\u003C/p>\n\u003Cp>I’m almost certain the same women who gush at the sight of a UV index over 7 would scream at the sight of a CH index at an equivalent level. Why the difference? Because the UV rays from the sun come with being tan. That’s literally the only difference. You’re still running a very high risk of radiation poisoning and skin cancer. Both of which are no joke.\u003C/p>\n\u003Chr>\n\u003Cp>Save yourself the trouble. Don’t glamorize these things. For your own safety.\u003C/p>\n\u003Cp>Wear some sunblock.\u003C/p>",{"headings":27,"imagePaths":42,"frontmatter":13},[28,32,36,39],{"depth":29,"slug":30,"text":31},2,"studying","Studying",{"depth":33,"slug":34,"text":35},3,"now-for-a-small-sidetrack-about-the-word-aesthetic","Now for a small sidetrack about the word “aesthetic”",{"depth":29,"slug":37,"text":38},"burnout","Burnout",{"depth":29,"slug":40,"text":41},"the-uv-index","The UV Index",[],"redefining-the-blog",{"id":43,"data":45,"body":52,"filePath":53,"digest":54,"rendered":55},{"title":46,"author":15,"description":47,"pubDate":48,"heroImage":49},"Redefining the blog","It's time we talked about the future of this blog.","June 12 2023",{"src":50,"alt":51},"/pattern.svg","abstract pattern","## It's time we formally meet.\n\nHi! I'm Ryan Mullin. I'm currently a freelance web developer, and proud student of [Camden Catholic High School](https://camdencatholic.org). I build things that I want to learn, and other more stupid things that soley exist for my pure enjoyment, take [(de)Motivator](https://demotivator.web.app) for example 😜. \n\n## So, what went wrong.\n\nSo, I've had this blog for about a year now, and its made its way through many (and many very ugly) iterations, but for a while, I've settled on this design with this specific tech stack. But, the problem lies where I got the content for all of the articles. Ever since I started this iteration of the blog, 100% of the content on the main blog was generated by AI. Specifically GPT-4 through Bing. This as it turns out, can create a lot of content, but that content is going to have a much, much worse quality. And usually, I've stuck with `quality > quantity`, but that just wasnt the case here.\n\n## So, where do we go from here?\n\nWell, now that you know what I sound like when it's actually me typing, I think itll be pretty easy to glean when I'm actually typing the articles, allowing you to call me out on it easier. Yes, I want you to call me out every time you suspect I'm using generative AI to write the articles.\n\n## What to expect in the future\n\nFrom here on out, expect articles to be more sporatic than normal, and be more few and far between, as I barely have time to keep up maintaining this site as it is, let alone continuing to write articles for it. However, all of the articles from here on out will be, **with my personal guarantee**, much higher quality, and much more interesting than ever before.\n\n\nThanks,\n\n-_ry_","src/content/blog/redefining-the-blog.md","9149a83c2e0f8ad5",{"html":56,"metadata":57},"\u003Ch2 id=\"its-time-we-formally-meet\">It’s time we formally meet.\u003C/h2>\n\u003Cp>Hi! I’m Ryan Mullin. I’m currently a freelance web developer, and proud student of \u003Ca href=\"https://camdencatholic.org\">Camden Catholic High School\u003C/a>. I build things that I want to learn, and other more stupid things that soley exist for my pure enjoyment, take \u003Ca href=\"https://demotivator.web.app\">(de)Motivator\u003C/a> for example 😜.\u003C/p>\n\u003Ch2 id=\"so-what-went-wrong\">So, what went wrong.\u003C/h2>\n\u003Cp>So, I’ve had this blog for about a year now, and its made its way through many (and many very ugly) iterations, but for a while, I’ve settled on this design with this specific tech stack. But, the problem lies where I got the content for all of the articles. Ever since I started this iteration of the blog, 100% of the content on the main blog was generated by AI. Specifically GPT-4 through Bing. This as it turns out, can create a lot of content, but that content is going to have a much, much worse quality. And usually, I’ve stuck with \u003Ccode>quality > quantity\u003C/code>, but that just wasnt the case here.\u003C/p>\n\u003Ch2 id=\"so-where-do-we-go-from-here\">So, where do we go from here?\u003C/h2>\n\u003Cp>Well, now that you know what I sound like when it’s actually me typing, I think itll be pretty easy to glean when I’m actually typing the articles, allowing you to call me out on it easier. Yes, I want you to call me out every time you suspect I’m using generative AI to write the articles.\u003C/p>\n\u003Ch2 id=\"what-to-expect-in-the-future\">What to expect in the future\u003C/h2>\n\u003Cp>From here on out, expect articles to be more sporatic than normal, and be more few and far between, as I barely have time to keep up maintaining this site as it is, let alone continuing to write articles for it. However, all of the articles from here on out will be, \u003Cstrong>with my personal guarantee\u003C/strong>, much higher quality, and much more interesting than ever before.\u003C/p>\n\u003Cp>Thanks,\u003C/p>\n\u003Cp>-\u003Cem>ry\u003C/em>\u003C/p>",{"headings":58,"imagePaths":71,"frontmatter":45},[59,62,65,68],{"depth":29,"slug":60,"text":61},"its-time-we-formally-meet","It’s time we formally meet.",{"depth":29,"slug":63,"text":64},"so-what-went-wrong","So, what went wrong.",{"depth":29,"slug":66,"text":67},"so-where-do-we-go-from-here","So, where do we go from here?",{"depth":29,"slug":69,"text":70},"what-to-expect-in-the-future","What to expect in the future",[],"school-schould-never-be-your-whole-personality",{"id":72,"data":74,"body":81,"filePath":82,"digest":83,"rendered":84},{"title":75,"author":15,"description":76,"pubDate":77,"heroImage":78},"School should never be your whole personality","A student's perspective on the people who make school their whole personality.","Oct 10 2023",{"src":79,"alt":80},"https://th.bing.com/th/id/OIP.p1_3yqRT1y34Pfxd6kVOtQHaFj?rs=1&pid=ImgDetMain","a giraffe entering a school building, surrealist","Recently, I've been pondering this thought a lot: \"why do people make school their whole personality?\" And it made me consider some of the reasons that people end up doing it in the first place, which led me to the conclusion to that school should never **ever** be your whole personality. Here's why:\n\n## My Position\n\nI'm in a unique positon to speak on this topic, as I am still in school. I would consider myself a pretty high achieveing student. Here are my grades as of writing to prove it:\n\n\n| Class | Grade |\n|----------|----------|\n| AP English Language | 96% |\n| AP European History | 100% |\n| AP Chemistry | 98% |\n| AP Seminar | 100% |\n| Honors Geometry | 98% |\n| Religion III | 100% |\n| Honors Spanish III | 100% |\n\nAs you can see, I obviously do care about school, but its far from the only thing that I care about it.\n\n## Why people do it\n\nShort answer: its probably becuase of trauma. \n\nBeing surrounded with those _type A_ students pretty much my whole life, I've come to realize that we are all basically the same person. We all have pressure, either from ourselves, or from other people in our lives, at one point or another, to succeed in school. However, once this pressure stops, we never really stop pressuring ourselves. This leads to an untamable desire for good grades and academic validation. This is what leads people to making their academics their whole personality.\n\n## What do I mean by \"making it your whole personality\"?\n\nWhen I say you are making school your \"whole personality\", I am describing that thought process that won't stop worrying abou  grades, schoolwork, and in general, succeeding in school. . Some common signs of this type of thought process are:\n\n- Constantly worrying about test, grades, etc\n- Constant convern over college admission/standardized admissions tests (i.e. SAT, ACT, MCAT, BAR) \n- Trying to do as many extracurriculars as possible to stand out\n- Attemopting to be the jack of all trades\n- Never ever confident in their work\n\n## Why this isnt good\n\nSchool is mandatory. All kids do it. We all symopathize with each other over it. It's the main source of stress in any child's life. However, when you worry about it too much, it begins to suck the life out of you.\n\nHere's my stance: \n\n> School should never take precedence over the things in your life that you actually enjoy. This may include hobbies, sports, family, relationships, etc.\n\nIf you ever, **EVER** cross this line, you are doing it wrong. This is a plain and simple fact in my head. \n\nYou know, it kinda draws me back to one of my favorite TV shows of this year, [Severance](https://tv.apple.com/us/show/severance/umc.cmc.1srk2goyh2q2zdxcx605w8vtx). Basically the premise is that this company requires its workers to sever their memories between work and personal, so that one side cannot access the other during its allotted time. \n\nI try to apply this principle to my life. I try to keep my school concerns during school hours, and my personal concerns out of school time. It's simple seperation of concerns.\n\n## How we can fix\n\nThe first and most important step is to literally stop caring so much. High School is a time for living, and in my view, you can't live if you're tied up in school work. You'll end up sucking all the fun out of the most fun time in your life. \n\nIt's OK. Trust me. You're not gonna die if you get a B. Learn from your mistakes, fix it next time, and move on.\n\nThe second part to this fix is not that you've eliminated any excess concern for school, start focusing on things you like. For me, thats sports (specifially swimming), being with my friends, and coding. These things are what make me such a generally happy, upbeat, and high energy person so consistently. It's becuase I make time for these things, seperate from my school concerns.\n\n\n## TL;DR\n\nStop caring so much about school, and learn to make time for yourself to do the things you enjoy. You, and everyone around you will benefit from it.\n\n\nOr don't.\n\n_-ry_","src/content/blog/school-schould-never-be-your-whole-personality.md","45476e5596eb4151",{"html":85,"metadata":86},"\u003Cp>Recently, I’ve been pondering this thought a lot: “why do people make school their whole personality?” And it made me consider some of the reasons that people end up doing it in the first place, which led me to the conclusion to that school should never \u003Cstrong>ever\u003C/strong> be your whole personality. Here’s why:\u003C/p>\n\u003Ch2 id=\"my-position\">My Position\u003C/h2>\n\u003Cp>I’m in a unique positon to speak on this topic, as I am still in school. I would consider myself a pretty high achieveing student. Here are my grades as of writing to prove it:\u003C/p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Class\u003C/th>\u003Cth>Grade\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>AP English Language\u003C/td>\u003Ctd>96%\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>AP European History\u003C/td>\u003Ctd>100%\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>AP Chemistry\u003C/td>\u003Ctd>98%\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>AP Seminar\u003C/td>\u003Ctd>100%\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Honors Geometry\u003C/td>\u003Ctd>98%\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Religion III\u003C/td>\u003Ctd>100%\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Honors Spanish III\u003C/td>\u003Ctd>100%\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Cp>As you can see, I obviously do care about school, but its far from the only thing that I care about it.\u003C/p>\n\u003Ch2 id=\"why-people-do-it\">Why people do it\u003C/h2>\n\u003Cp>Short answer: its probably becuase of trauma.\u003C/p>\n\u003Cp>Being surrounded with those \u003Cem>type A\u003C/em> students pretty much my whole life, I’ve come to realize that we are all basically the same person. We all have pressure, either from ourselves, or from other people in our lives, at one point or another, to succeed in school. However, once this pressure stops, we never really stop pressuring ourselves. This leads to an untamable desire for good grades and academic validation. This is what leads people to making their academics their whole personality.\u003C/p>\n\u003Ch2 id=\"what-do-i-mean-by-making-it-your-whole-personality\">What do I mean by “making it your whole personality”?\u003C/h2>\n\u003Cp>When I say you are making school your “whole personality”, I am describing that thought process that won’t stop worrying abou  grades, schoolwork, and in general, succeeding in school. . Some common signs of this type of thought process are:\u003C/p>\n\u003Cul>\n\u003Cli>Constantly worrying about test, grades, etc\u003C/li>\n\u003Cli>Constant convern over college admission/standardized admissions tests (i.e. SAT, ACT, MCAT, BAR)\u003C/li>\n\u003Cli>Trying to do as many extracurriculars as possible to stand out\u003C/li>\n\u003Cli>Attemopting to be the jack of all trades\u003C/li>\n\u003Cli>Never ever confident in their work\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"why-this-isnt-good\">Why this isnt good\u003C/h2>\n\u003Cp>School is mandatory. All kids do it. We all symopathize with each other over it. It’s the main source of stress in any child’s life. However, when you worry about it too much, it begins to suck the life out of you.\u003C/p>\n\u003Cp>Here’s my stance:\u003C/p>\n\u003Cblockquote>\n\u003Cp>School should never take precedence over the things in your life that you actually enjoy. This may include hobbies, sports, family, relationships, etc.\u003C/p>\n\u003C/blockquote>\n\u003Cp>If you ever, \u003Cstrong>EVER\u003C/strong> cross this line, you are doing it wrong. This is a plain and simple fact in my head.\u003C/p>\n\u003Cp>You know, it kinda draws me back to one of my favorite TV shows of this year, \u003Ca href=\"https://tv.apple.com/us/show/severance/umc.cmc.1srk2goyh2q2zdxcx605w8vtx\">Severance\u003C/a>. Basically the premise is that this company requires its workers to sever their memories between work and personal, so that one side cannot access the other during its allotted time.\u003C/p>\n\u003Cp>I try to apply this principle to my life. I try to keep my school concerns during school hours, and my personal concerns out of school time. It’s simple seperation of concerns.\u003C/p>\n\u003Ch2 id=\"how-we-can-fix\">How we can fix\u003C/h2>\n\u003Cp>The first and most important step is to literally stop caring so much. High School is a time for living, and in my view, you can’t live if you’re tied up in school work. You’ll end up sucking all the fun out of the most fun time in your life.\u003C/p>\n\u003Cp>It’s OK. Trust me. You’re not gonna die if you get a B. Learn from your mistakes, fix it next time, and move on.\u003C/p>\n\u003Cp>The second part to this fix is not that you’ve eliminated any excess concern for school, start focusing on things you like. For me, thats sports (specifially swimming), being with my friends, and coding. These things are what make me such a generally happy, upbeat, and high energy person so consistently. It’s becuase I make time for these things, seperate from my school concerns.\u003C/p>\n\u003Ch2 id=\"tldr\">TL;DR\u003C/h2>\n\u003Cp>Stop caring so much about school, and learn to make time for yourself to do the things you enjoy. You, and everyone around you will benefit from it.\u003C/p>\n\u003Cp>Or don’t.\u003C/p>\n\u003Cp>\u003Cem>-ry\u003C/em>\u003C/p>",{"headings":87,"imagePaths":106,"frontmatter":74},[88,91,94,97,100,103],{"depth":29,"slug":89,"text":90},"my-position","My Position",{"depth":29,"slug":92,"text":93},"why-people-do-it","Why people do it",{"depth":29,"slug":95,"text":96},"what-do-i-mean-by-making-it-your-whole-personality","What do I mean by “making it your whole personality”?",{"depth":29,"slug":98,"text":99},"why-this-isnt-good","Why this isnt good",{"depth":29,"slug":101,"text":102},"how-we-can-fix","How we can fix",{"depth":29,"slug":104,"text":105},"tldr","TL;DR",[],"svelte-and-react",{"id":107,"data":109,"body":116,"filePath":117,"digest":118,"rendered":119},{"title":110,"author":15,"description":111,"pubDate":112,"heroImage":113},"It's OK to love both React and Svelte","Debunking React vs. Svelte: Emphasizing Developer Choice and Collaboration","July 13 2023",{"src":114,"alt":115},"/svr.jpg","svelte versus react","Guess what? I'm a little mad right now. Do you want to know why? It's because we're treating these JavaScript `(libraries|frameworks)` like they're corperations like Apple and Samsung, both of which have amassed loyal, **cult** followings that would burn you at the stake if you showed signs of the supporting the other side on their side. But guess what, (although both React and Svelte are owned and maintained by Facebook and Vercel, respectively), these are still, at their hearts, open-source JavaScript frameworks!! They might even (_gasp_) share ideas with one another 😨😱\n\n\n## How this started\nThis started after I watched [this video](https://youtu.be/bh-e700IlmQ) by [the Primeagen](https://www.youtube.com/@ThePrimeagen), where he reads and reacts to a blog post from a svelte developer. (Hi Prime if you're reading this one). The point of the post however, was to disprove one of the main arguments for react, and against svelte, that being the ecosystem around it. The post argued that svelte doesn't have a large ecosystem because the framework itself is pretty batteries-icluded when it comes to common tasks such as state management, scoped css, transitions, etc. However, this is what got me thinking.\n\n\n## Does it really matter that much?\nShort answer: **no.**  \u003Cbr />\nLong answer: **no.** (but with more words)\n\nYou see, I would call myself both an avid React and Svelte developer. I've bult applications at scale with both of them (although React was with Next, I believe it was a vaild and neccesary abstraction), and I love the ergonmics of both libaries. For Svelte, it has quite frankly never been easier to build large scale, simply reactive, fast, \"it just works\" apps, with the magic of the Svelte compiler. However, with React, I love how close it stays to JavaScript at its core. Using ternarys to convey conditionals in the UI is exactly what my JS-brain would have thought of. Using `array.map()` to loop over an array and display it in the UI feels like the \"official JavaScript way of doing things\". React feels like an extension of JavaScript, while Svelte feels more like a all or nothing solution. And guess what, **that's totally OK!**\n\n\n## It's not the arrow, its the archer\n\nGuess what? If you can build a website with Svelte, and that feels most comfortable to you, then do it. If you can do it better in Vue, do it. If you can do it better in React, do it. If you can do it better in a obscure ARM64 assembly language designed by a russian cybercriminal who's been on the CIA's most wanted list for the past 30 years, **then do it.**\n\nMy point is that it's not the tools we use to build these amazing apps. It's the amazing developer who makes the amazing apps. If you can make your app amazing, nobody cares what you used to build it. Take [SoFi stadium](https://www.sofistadium.com/) in Los Angeles for example (pictured below). It is (in my opinion) one of the most beautiful studtures built in the modern world, and a complete engineering marvel. Notice how nobody is asking if it was built with Stanley or Black & Decker tools? Literally nobody cares what it was built with, as long as it looks good and is fuctional, you'll get the praise either way.\n\n![SoFi Stadium](https://th.bing.com/th/id/R.edf274dfa51ee153059fcced1343da84?rik=UCt2EeWGQvrT1g&pid=ImgRaw&r=0)\n\n\n## Let's fix this\n\nThere is only one true way to fix this dilemma. Give up our egos. Since that's not possible, (espcially as developers), we should all at least try to support each others choice in tooling. Both React and Svelte are amazing tools, and have been used to build some of the most amazing apps that push the boundries of what the web platform can do everyday. Arguing over which tool is better is a waste of time, becuase at the end of the day, they're just tools. Tools to make the best apps possible.\n\n\n_-ry_","src/content/blog/svelte-and-react.md","1c1aed78900ec4a7",{"html":120,"metadata":121},"\u003Cp>Guess what? I’m a little mad right now. Do you want to know why? It’s because we’re treating these JavaScript \u003Ccode>(libraries|frameworks)\u003C/code> like they’re corperations like Apple and Samsung, both of which have amassed loyal, \u003Cstrong>cult\u003C/strong> followings that would burn you at the stake if you showed signs of the supporting the other side on their side. But guess what, (although both React and Svelte are owned and maintained by Facebook and Vercel, respectively), these are still, at their hearts, open-source JavaScript frameworks!! They might even (\u003Cem>gasp\u003C/em>) share ideas with one another 😨😱\u003C/p>\n\u003Ch2 id=\"how-this-started\">How this started\u003C/h2>\n\u003Cp>This started after I watched \u003Ca href=\"https://youtu.be/bh-e700IlmQ\">this video\u003C/a> by \u003Ca href=\"https://www.youtube.com/@ThePrimeagen\">the Primeagen\u003C/a>, where he reads and reacts to a blog post from a svelte developer. (Hi Prime if you’re reading this one). The point of the post however, was to disprove one of the main arguments for react, and against svelte, that being the ecosystem around it. The post argued that svelte doesn’t have a large ecosystem because the framework itself is pretty batteries-icluded when it comes to common tasks such as state management, scoped css, transitions, etc. However, this is what got me thinking.\u003C/p>\n\u003Ch2 id=\"does-it-really-matter-that-much\">Does it really matter that much?\u003C/h2>\n\u003Cp>Short answer: \u003Cstrong>no.\u003C/strong>  \u003Cbr>\nLong answer: \u003Cstrong>no.\u003C/strong> (but with more words)\u003C/p>\n\u003Cp>You see, I would call myself both an avid React and Svelte developer. I’ve bult applications at scale with both of them (although React was with Next, I believe it was a vaild and neccesary abstraction), and I love the ergonmics of both libaries. For Svelte, it has quite frankly never been easier to build large scale, simply reactive, fast, “it just works” apps, with the magic of the Svelte compiler. However, with React, I love how close it stays to JavaScript at its core. Using ternarys to convey conditionals in the UI is exactly what my JS-brain would have thought of. Using \u003Ccode>array.map()\u003C/code> to loop over an array and display it in the UI feels like the “official JavaScript way of doing things”. React feels like an extension of JavaScript, while Svelte feels more like a all or nothing solution. And guess what, \u003Cstrong>that’s totally OK!\u003C/strong>\u003C/p>\n\u003Ch2 id=\"its-not-the-arrow-its-the-archer\">It’s not the arrow, its the archer\u003C/h2>\n\u003Cp>Guess what? If you can build a website with Svelte, and that feels most comfortable to you, then do it. If you can do it better in Vue, do it. If you can do it better in React, do it. If you can do it better in a obscure ARM64 assembly language designed by a russian cybercriminal who’s been on the CIA’s most wanted list for the past 30 years, \u003Cstrong>then do it.\u003C/strong>\u003C/p>\n\u003Cp>My point is that it’s not the tools we use to build these amazing apps. It’s the amazing developer who makes the amazing apps. If you can make your app amazing, nobody cares what you used to build it. Take \u003Ca href=\"https://www.sofistadium.com/\">SoFi stadium\u003C/a> in Los Angeles for example (pictured below). It is (in my opinion) one of the most beautiful studtures built in the modern world, and a complete engineering marvel. Notice how nobody is asking if it was built with Stanley or Black &#x26; Decker tools? Literally nobody cares what it was built with, as long as it looks good and is fuctional, you’ll get the praise either way.\u003C/p>\n\u003Cp>\u003Cimg src=\"https://th.bing.com/th/id/R.edf274dfa51ee153059fcced1343da84?rik=UCt2EeWGQvrT1g&#x26;pid=ImgRaw&#x26;r=0\" alt=\"SoFi Stadium\">\u003C/p>\n\u003Ch2 id=\"lets-fix-this\">Let’s fix this\u003C/h2>\n\u003Cp>There is only one true way to fix this dilemma. Give up our egos. Since that’s not possible, (espcially as developers), we should all at least try to support each others choice in tooling. Both React and Svelte are amazing tools, and have been used to build some of the most amazing apps that push the boundries of what the web platform can do everyday. Arguing over which tool is better is a waste of time, becuase at the end of the day, they’re just tools. Tools to make the best apps possible.\u003C/p>\n\u003Cp>\u003Cem>-ry\u003C/em>\u003C/p>",{"headings":122,"imagePaths":135,"frontmatter":109},[123,126,129,132],{"depth":29,"slug":124,"text":125},"how-this-started","How this started",{"depth":29,"slug":127,"text":128},"does-it-really-matter-that-much","Does it really matter that much?",{"depth":29,"slug":130,"text":131},"its-not-the-arrow-its-the-archer","It’s not the arrow, its the archer",{"depth":29,"slug":133,"text":134},"lets-fix-this","Let’s fix this",[],"the-mlb-does-ticketing-right",{"id":136,"data":138,"body":145,"filePath":146,"digest":147,"rendered":148},{"title":139,"author":15,"description":140,"pubDate":141,"heroImage":142},"The MLB does ticketing right.","This is my appreciation post for MLB Ballpark.","April 1 2024",{"src":143,"alt":144},"https://img.mlbstatic.com/mlb-images/image/private/t_4x5/t_w372/mlb/g1h9zcayomrircrmnl24.png","A cell phone displaying the MLB Ballpark app","I love the Phillies.\n\nThey're my hometown team. I've been a fan of them since I was little, and have been going to their games since I was little too. However, there was a period of time in between 2021 and 2023 where I didnt really go to any games. However, during this time, MLB quietly introduced the Ballpark app, which I believe is the gold standard for what professional sports ticketing systems should be in today's age.\n\n\nHere is a non-comprehensive list of all the things that I like about it.\n\n**_This post is not sponsored in any way. I just love the app this much._**\n\n## One account. All of baseball.\n\nOk, I'll admit that sounds like a tagline for [mlb.com](https://mlb.com) 🤪\n\nBut really, its the best. I have one MLB.com account, and any tickets for any game that I wish to attend across the whole league can be bought on that one account, and it'll show up on the Ballpark app because I'm signed into it with my MLB account. It's awesome!\n\nFor the NFL, for example, I would have to create a ticketmaster account, buy individual tickets for an Eagles game through the Eagles ticketmaster page, and then download them to my Apple Wallet (more on that later). And then if I wanted to go to any other teams game, I'd have to go through this whole process again! How inconveinient!\n\n## Ticket tracking\n\nThere's a page in the app where you can track all of your tickets for all of the games you have been to with the app. It even shows a summary of the number of stadiums and teams you've seen play!\n\n\n## Favorite teams\n\nI can check the schedule for the Phillies becuase I have them as a favorite team in the app. But, I can just as easily flip over to any other team in the MLB and see what they have going on\n\n## Stadium entry\n\nIt is by far the easiest way to get into the stadium. I just put my phone in the scanner and I'm in. That's all there is to it! \n\nDon't even get me started on Go-Ahead Entry. Super dystopian, but also the fastest way I've ever gotten into a stadium.\n\nAnd the same app works across every. single. stadium. I don't need to download an app for every team, as the Ballpark app works for all of them!\n\n\n## Apple Wallet, only if you want it\n\nThis is such a small thing, but I think that Apple Wallet is becoming a tad overused these days. Espically if you have season tickets for something like an Eagles game. Yes, I know you can clear them from your wallet but it really is an inconveinience. For Ballpark, you can choose to put them in your Apple Wallet, or just use the interface built into the app, and then have them automatically put them in your [collection](#ticket-tracking)\n\n\n## Stadium navigation\n\nThis is espcially useful if you're in a new stadium you've never been to before. This feature gives you an interactive map of the stadium to find food, restrooms, etc.\n\n## Sharing tickets\n\nGone are the days where you have to use your friend's phone to get into the stadium. Now, they can send you a ticket that gets credited to your MLB account, and that you can use by yourself to get into the stadium. It even gets added to your [collection](#ticket-tracking)\n\n\n## What I don't like\n\n- The app looks sterile and bare, but this does not impede on the fuctionality. It could just use some design tweaks\n- Sharing tickets is a bit of a janky process, both on the sending and recieveing end, and could use some polish\n- A lot of the app requies you to be in an external browser, whcih defeats the whole purpose of the app. Like, I get it if theres some niche thing you can only access on the browser, but I feel like buying tickets should at least be an in-app experience. They could even tie it in with Apple Pay.\n- This is a nitpicky request, but I would love it if they used the Live Activities API for when they recognize you are in a stadium, and give you like a countdown or something until the first picth. That would be so cool.\n\n\n## Conclusion\n\nI love the MLB Ballpark app, and I wish other leauges would follow in the MLB's footsteps, becuase they are really onto something good here\n\nCheck it out [here](https://www.mlb.com/apps/ballpark)","src/content/blog/the-mlb-does-ticketing-right.md","c711bc174c5ab719",{"html":149,"metadata":150},"\u003Cp>I love the Phillies.\u003C/p>\n\u003Cp>They’re my hometown team. I’ve been a fan of them since I was little, and have been going to their games since I was little too. However, there was a period of time in between 2021 and 2023 where I didnt really go to any games. However, during this time, MLB quietly introduced the Ballpark app, which I believe is the gold standard for what professional sports ticketing systems should be in today’s age.\u003C/p>\n\u003Cp>Here is a non-comprehensive list of all the things that I like about it.\u003C/p>\n\u003Cp>\u003Cstrong>\u003Cem>This post is not sponsored in any way. I just love the app this much.\u003C/em>\u003C/strong>\u003C/p>\n\u003Ch2 id=\"one-account-all-of-baseball\">One account. All of baseball.\u003C/h2>\n\u003Cp>Ok, I’ll admit that sounds like a tagline for \u003Ca href=\"https://mlb.com\">mlb.com\u003C/a> 🤪\u003C/p>\n\u003Cp>But really, its the best. I have one MLB.com account, and any tickets for any game that I wish to attend across the whole league can be bought on that one account, and it’ll show up on the Ballpark app because I’m signed into it with my MLB account. It’s awesome!\u003C/p>\n\u003Cp>For the NFL, for example, I would have to create a ticketmaster account, buy individual tickets for an Eagles game through the Eagles ticketmaster page, and then download them to my Apple Wallet (more on that later). And then if I wanted to go to any other teams game, I’d have to go through this whole process again! How inconveinient!\u003C/p>\n\u003Ch2 id=\"ticket-tracking\">Ticket tracking\u003C/h2>\n\u003Cp>There’s a page in the app where you can track all of your tickets for all of the games you have been to with the app. It even shows a summary of the number of stadiums and teams you’ve seen play!\u003C/p>\n\u003Ch2 id=\"favorite-teams\">Favorite teams\u003C/h2>\n\u003Cp>I can check the schedule for the Phillies becuase I have them as a favorite team in the app. But, I can just as easily flip over to any other team in the MLB and see what they have going on\u003C/p>\n\u003Ch2 id=\"stadium-entry\">Stadium entry\u003C/h2>\n\u003Cp>It is by far the easiest way to get into the stadium. I just put my phone in the scanner and I’m in. That’s all there is to it!\u003C/p>\n\u003Cp>Don’t even get me started on Go-Ahead Entry. Super dystopian, but also the fastest way I’ve ever gotten into a stadium.\u003C/p>\n\u003Cp>And the same app works across every. single. stadium. I don’t need to download an app for every team, as the Ballpark app works for all of them!\u003C/p>\n\u003Ch2 id=\"apple-wallet-only-if-you-want-it\">Apple Wallet, only if you want it\u003C/h2>\n\u003Cp>This is such a small thing, but I think that Apple Wallet is becoming a tad overused these days. Espically if you have season tickets for something like an Eagles game. Yes, I know you can clear them from your wallet but it really is an inconveinience. For Ballpark, you can choose to put them in your Apple Wallet, or just use the interface built into the app, and then have them automatically put them in your \u003Ca href=\"#ticket-tracking\">collection\u003C/a>\u003C/p>\n\u003Ch2 id=\"stadium-navigation\">Stadium navigation\u003C/h2>\n\u003Cp>This is espcially useful if you’re in a new stadium you’ve never been to before. This feature gives you an interactive map of the stadium to find food, restrooms, etc.\u003C/p>\n\u003Ch2 id=\"sharing-tickets\">Sharing tickets\u003C/h2>\n\u003Cp>Gone are the days where you have to use your friend’s phone to get into the stadium. Now, they can send you a ticket that gets credited to your MLB account, and that you can use by yourself to get into the stadium. It even gets added to your \u003Ca href=\"#ticket-tracking\">collection\u003C/a>\u003C/p>\n\u003Ch2 id=\"what-i-dont-like\">What I don’t like\u003C/h2>\n\u003Cul>\n\u003Cli>The app looks sterile and bare, but this does not impede on the fuctionality. It could just use some design tweaks\u003C/li>\n\u003Cli>Sharing tickets is a bit of a janky process, both on the sending and recieveing end, and could use some polish\u003C/li>\n\u003Cli>A lot of the app requies you to be in an external browser, whcih defeats the whole purpose of the app. Like, I get it if theres some niche thing you can only access on the browser, but I feel like buying tickets should at least be an in-app experience. They could even tie it in with Apple Pay.\u003C/li>\n\u003Cli>This is a nitpicky request, but I would love it if they used the Live Activities API for when they recognize you are in a stadium, and give you like a countdown or something until the first picth. That would be so cool.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"conclusion\">Conclusion\u003C/h2>\n\u003Cp>I love the MLB Ballpark app, and I wish other leauges would follow in the MLB’s footsteps, becuase they are really onto something good here\u003C/p>\n\u003Cp>Check it out \u003Ca href=\"https://www.mlb.com/apps/ballpark\">here\u003C/a>\u003C/p>",{"headings":151,"imagePaths":179,"frontmatter":138},[152,155,158,161,164,167,170,173,176],{"depth":29,"slug":153,"text":154},"one-account-all-of-baseball","One account. All of baseball.",{"depth":29,"slug":156,"text":157},"ticket-tracking","Ticket tracking",{"depth":29,"slug":159,"text":160},"favorite-teams","Favorite teams",{"depth":29,"slug":162,"text":163},"stadium-entry","Stadium entry",{"depth":29,"slug":165,"text":166},"apple-wallet-only-if-you-want-it","Apple Wallet, only if you want it",{"depth":29,"slug":168,"text":169},"stadium-navigation","Stadium navigation",{"depth":29,"slug":171,"text":172},"sharing-tickets","Sharing tickets",{"depth":29,"slug":174,"text":175},"what-i-dont-like","What I don’t like",{"depth":29,"slug":177,"text":178},"conclusion","Conclusion",[],"the-mlb-needs-apple-tv",{"id":180,"data":182,"body":189,"filePath":190,"digest":191,"rendered":192},{"title":183,"author":15,"description":184,"pubDate":185,"heroImage":186},"The MLB Needs Apple TV","Most people hate that Friday Night Baseball is now exclusively on Apple TV+. I see it as necessary","April 6 2024",{"src":187,"alt":188},"https://www.apple.com/newsroom/images/product/apple-tv-plus/lifestyle/Apple-TV-plus-MLB-Friday-Night-Baseball_big.jpg.large_2x.jpg","First and current logo of Friday Night Baseball, the branding used for Apple TV+'s coverage of Major League Baseball, since 8 April 2022.","Most people hate that Friday Night Baseball is now exclusively on Apple TV+. I see it as necessary.\n\n\n> Yes, I know. Two baseball realted articles in a row. I am aware. But, it's opening week and I can't help myself. There's just so many thoughts I've cooked up over the break that I simply must share.\n\nLet me explain my ideaology here:\n\n## Production Value\n\nThe production value that Apple brings to their Friday Night Baseball[^1] is absolutely unmatched. Between the visuals, the statistics, and even the scoreboard overlay, Apple brings their own UI style to the TV screen. It's just as beautiful as their UIs are. \n\n![A TV, tablet, and phone displaying Friday Night Baseball](https://www.apple.com/newsroom/images/2024/03/friday-night-baseball-returns-march-29/article/Apple-TV-Plus-Friday-Night-Baseball-hero_big.jpg.large_2x.jpg)\n\n## Implications\n\nYou see, most MLB games these days are broadcast over hyper-local television stations, and theres nothing wrong with that. I dont want to see an LA Angels game when I live near Philadelphia. I'm not saying every game should be broadcast nationally.\n\nWhat I am saying is that Apple set a new bar for what a national broadcast of a sporting event should look like. It should have the quality and production value that Apple creates for their Friday Night Baseball series. \n\nIt's almost like a necessary evil. These games are locked away behind an Apple TV+ paywall, but these broadcasts show what truly can be done for a national sporting broadcast. As a result, the traditional national broadcasts are forced to play catchup.\n\n\n## Conclusion\n\nSo, in conclusion, Apple TV is doing the good work by forcing the industry forward through Friday Night Baseball. \n\nOn a more personal note, I'm going to a Phillies game on Friday. It's not scheduled as a Friday Night Baseball exclusive, but I'll play the intro on my phone before the game.\n\nI'll leave it here.\n\n\u003Ciframe width=\"auto\" height=\"auto\" src=\"https://www.youtube-nocookie.com/embed/MLRn531YO7E?si=sPAPKih7ecnE1rOF\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen>\u003C/iframe>\n\n\n\n[^1]: Friday Night Baseball is Copyright 2024, Apple Inc","src/content/blog/the-mlb-needs-apple-tv.md","c2672506333bf330",{"html":193,"metadata":194},"\u003Cp>Most people hate that Friday Night Baseball is now exclusively on Apple TV+. I see it as necessary.\u003C/p>\n\u003Cblockquote>\n\u003Cp>Yes, I know. Two baseball realted articles in a row. I am aware. But, it’s opening week and I can’t help myself. There’s just so many thoughts I’ve cooked up over the break that I simply must share.\u003C/p>\n\u003C/blockquote>\n\u003Cp>Let me explain my ideaology here:\u003C/p>\n\u003Ch2 id=\"production-value\">Production Value\u003C/h2>\n\u003Cp>The production value that Apple brings to their Friday Night Baseball\u003Csup>\u003Ca href=\"#user-content-fn-1\" id=\"user-content-fnref-1\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">1\u003C/a>\u003C/sup> is absolutely unmatched. Between the visuals, the statistics, and even the scoreboard overlay, Apple brings their own UI style to the TV screen. It’s just as beautiful as their UIs are.\u003C/p>\n\u003Cp>\u003Cimg src=\"https://www.apple.com/newsroom/images/2024/03/friday-night-baseball-returns-march-29/article/Apple-TV-Plus-Friday-Night-Baseball-hero_big.jpg.large_2x.jpg\" alt=\"A TV, tablet, and phone displaying Friday Night Baseball\">\u003C/p>\n\u003Ch2 id=\"implications\">Implications\u003C/h2>\n\u003Cp>You see, most MLB games these days are broadcast over hyper-local television stations, and theres nothing wrong with that. I dont want to see an LA Angels game when I live near Philadelphia. I’m not saying every game should be broadcast nationally.\u003C/p>\n\u003Cp>What I am saying is that Apple set a new bar for what a national broadcast of a sporting event should look like. It should have the quality and production value that Apple creates for their Friday Night Baseball series.\u003C/p>\n\u003Cp>It’s almost like a necessary evil. These games are locked away behind an Apple TV+ paywall, but these broadcasts show what truly can be done for a national sporting broadcast. As a result, the traditional national broadcasts are forced to play catchup.\u003C/p>\n\u003Ch2 id=\"conclusion\">Conclusion\u003C/h2>\n\u003Cp>So, in conclusion, Apple TV is doing the good work by forcing the industry forward through Friday Night Baseball.\u003C/p>\n\u003Cp>On a more personal note, I’m going to a Phillies game on Friday. It’s not scheduled as a Friday Night Baseball exclusive, but I’ll play the intro on my phone before the game.\u003C/p>\n\u003Cp>I’ll leave it here.\u003C/p>\n\u003Ciframe width=\"auto\" height=\"auto\" src=\"https://www.youtube-nocookie.com/embed/MLRn531YO7E?si=sPAPKih7ecnE1rOF\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen>\u003C/iframe>\n\u003Csection data-footnotes=\"\" class=\"footnotes\">\u003Ch2 class=\"sr-only\" id=\"footnote-label\">Footnotes\u003C/h2>\n\u003Col>\n\u003Cli id=\"user-content-fn-1\">\n\u003Cp>Friday Night Baseball is Copyright 2024, Apple Inc \u003Ca href=\"#user-content-fnref-1\" data-footnote-backref=\"\" aria-label=\"Back to reference 1\" class=\"data-footnote-backref\">↩\u003C/a>\u003C/p>\n\u003C/li>\n\u003C/ol>\n\u003C/section>",{"headings":195,"imagePaths":206,"frontmatter":182},[196,199,202,203],{"depth":29,"slug":197,"text":198},"production-value","Production Value",{"depth":29,"slug":200,"text":201},"implications","Implications",{"depth":29,"slug":177,"text":178},{"depth":29,"slug":204,"text":205},"footnote-label","Footnotes",[],"yankees-stop-acting-old",{"id":207,"data":209,"body":216,"filePath":217,"digest":218,"rendered":219},{"title":210,"author":15,"description":211,"pubDate":212,"heroImage":213},"Dear Yankees, Stop Acting so Old","You're actually a modern team. There's no need to act old","July 8 2024",{"src":214,"alt":215},"https://populous.com/wp-content/uploads/2018/01/NYYMLBP_0176_Esto.jpg","a view from the upper levels of Yankee Stadium","Don’t you just love that classic frieze? The sights and sounds of old-school baseball are always alive at Yankee Stadium.\n\nExcept it’s a sham. You’re not watching old baseball. You’re watching a modern team masquerade as an old-school team. Let me explain.\n\n## Yankee Stadium\n\nYankee Stadium is, by every stretch of the imagination, a modern baseball stadium. Yes, it has the frieze and the flags adorning the roof, and some other “classic” elements, but there are also giant screens all around the stadium. The fact that any modern amenities exist at all in this stadium reveals the charade that this team plays.\n\n## The Uniforms\n\nThe Yankees refuse to update their uniforms from the pinstripes and gray variants. Not only will they never get a city connect uniform, but they even refuse to put players’ names on them. These uniforms are mass-produced by Nike; there’s no reason you can’t make these changes if it weren’t for keeping up with a useless tradition.\n\n## The Solution\n\nIf the Yankees truly want to be a “classic” team, they must make the following changes:\n\n- Remove all electronic scoreboards and cameras in Yankee Stadium\n- Go back to paper ticketing that can only be purchased at the box office\n- Keep score by hand and update it manually using a manual scoreboard\n- Hand-sew every uniform the team wears\n- Remove all parking lots (parking wasn’t needed back then)\n- Legalize PEDs for the team\n- No instant replay\n- Every game must be played exactly as it would in the 1920s\n\nThen, and only then, will I consider the Yankees a true classic franchise.\n\nBut that won’t happen. So Yankees, stop playing this elaborate game of pretend.","src/content/blog/yankees-stop-acting-old.md","20b424fa78f158a6",{"html":220,"metadata":221},"\u003Cp>Don’t you just love that classic frieze? The sights and sounds of old-school baseball are always alive at Yankee Stadium.\u003C/p>\n\u003Cp>Except it’s a sham. You’re not watching old baseball. You’re watching a modern team masquerade as an old-school team. Let me explain.\u003C/p>\n\u003Ch2 id=\"yankee-stadium\">Yankee Stadium\u003C/h2>\n\u003Cp>Yankee Stadium is, by every stretch of the imagination, a modern baseball stadium. Yes, it has the frieze and the flags adorning the roof, and some other “classic” elements, but there are also giant screens all around the stadium. The fact that any modern amenities exist at all in this stadium reveals the charade that this team plays.\u003C/p>\n\u003Ch2 id=\"the-uniforms\">The Uniforms\u003C/h2>\n\u003Cp>The Yankees refuse to update their uniforms from the pinstripes and gray variants. Not only will they never get a city connect uniform, but they even refuse to put players’ names on them. These uniforms are mass-produced by Nike; there’s no reason you can’t make these changes if it weren’t for keeping up with a useless tradition.\u003C/p>\n\u003Ch2 id=\"the-solution\">The Solution\u003C/h2>\n\u003Cp>If the Yankees truly want to be a “classic” team, they must make the following changes:\u003C/p>\n\u003Cul>\n\u003Cli>Remove all electronic scoreboards and cameras in Yankee Stadium\u003C/li>\n\u003Cli>Go back to paper ticketing that can only be purchased at the box office\u003C/li>\n\u003Cli>Keep score by hand and update it manually using a manual scoreboard\u003C/li>\n\u003Cli>Hand-sew every uniform the team wears\u003C/li>\n\u003Cli>Remove all parking lots (parking wasn’t needed back then)\u003C/li>\n\u003Cli>Legalize PEDs for the team\u003C/li>\n\u003Cli>No instant replay\u003C/li>\n\u003Cli>Every game must be played exactly as it would in the 1920s\u003C/li>\n\u003C/ul>\n\u003Cp>Then, and only then, will I consider the Yankees a true classic franchise.\u003C/p>\n\u003Cp>But that won’t happen. So Yankees, stop playing this elaborate game of pretend.\u003C/p>",{"headings":222,"imagePaths":232,"frontmatter":209},[223,226,229],{"depth":29,"slug":224,"text":225},"yankee-stadium","Yankee Stadium",{"depth":29,"slug":227,"text":228},"the-uniforms","The Uniforms",{"depth":29,"slug":230,"text":231},"the-solution","The Solution",[],"lets-make-a-new-language",{"id":233,"data":235,"body":241,"filePath":242,"digest":243,"rendered":244},{"title":236,"author":15,"description":237,"pubDate":112,"heroImage":238},"Let's make a new programming language","Just for funzies, let's make my dream programming language.",{"src":239,"alt":240},"https://fthmb.tqn.com/_P_IpRezcdFY2uZZNjKtLpyj2zA=/1500x1000/filters:fill(auto,1)/JavaScript-58acbb8a3df78c345bad32c2.jpg","clip art of a giraffe programming and using a computer","Do you know what the worlds needs right now? More programming languages. Never fear! I have concocted one from the deepest, darkest dephts of my strange sense of humor. I tried to keep it reasonable enough that it was usable, but also threw in some tricks to make it uniquely **mine**\n\nIt's called GiraffeScript, or GScript for short. It's logo is listed above\n\n## Basis\n\nLet's start of with a base language. I am most familiar with TypeScript, so we'll build off of that. Plus, the current tooling in the JS ecosystem rigeht now is beyond compare, and has some of the best suppourt around. Plus, we can use existing tools like node, deno, and V8 to execute the code after it has been transpiled. (Yes, its a superset. Put your pitchforks and torches down please)\n\n## Basics\n\nLet's start off with the basics of the language, and demonstrate them with some example programs.\n\n#### Hello, World\n`console.*` is a bad abstraction. It's meant strictly for debugging, and you have to access the `console` namespace to even display words on a screen. Not helpful nor fun for beginners. To print to the standard output, simply use `write()`\n```ts\nwrite('Hello, World!'); // Prints \"Hello, World!\" to the standard output.\n```\n\n### Delclaring Variables\n\nWhy do we need three keywords to declare a variable? I still dont know the answer to that question.\nTo declare a variable, use `var`.\n```ts\nvar name = \"GScript\"\n```\nALl variables shall be globally scoped and immutable by default. To change this behavior, change your declaration.\nTo make it mutable, add `mut`.\"\"\nTo make it block scoped, add `blockscope`\n```rs\nmut var animal = 'Giraffe' // Globally scoped mutable variable\nblockscope var short  = 'G' // Blockscoped immutable variable\nblockscope mut var lessShort = 'GScript' //blockscoped mutable variable.\n```\n\n#### Types\n\nAs with typescript, all types are optional. If you do not specify a specific type, the type will be infered. If you want to be condecending about it, you can tell the compiler to explicity infer the type, which is its automatic behavior\n```ts\nvar bestAnimal: infer = 'Giraffe'\n```\nIn fact, you can use `infer` with a generic, defeating the whole purpose of it in the first place!!\n```ts\nvar myFavoriteNumber: infer\u003Cnumber> = 6\n```\n\nTo specify the return type of the function, use the squiggly arrow. This is due to how it looks kinda funny, and that pleases me.\n```ts\nfunction getBestAnimal() ~> infer\u003Cstring> {\n    return 'Giraffe'\n}\n```\n\n## Functions\nThere are multiple different ways to declare a function. The most simple of which is `function`\n\n```ts\nfunction add(a: infer\u003Cnumber>, b: infer\u003Cnumber>) ~> number {\n    return a +b\n}\n```\n\nHowever, if you want to be concise, a hipter, or a consice hipster, you can use an arrow function!\n```ts\n-> (a, b) ~> infer\u003Cnumber> => a+b \u003C-\n// Notice how the function has to be on one line, and surronded by arrows pointing at it, to let the rest of the program know how concise and hip it is.\n```\n\nAs in typescript, you can assign these to variables\n```ts\nvar addFn = -> (a, b) => a+b \u003C-\n```\n\n### Returning Values\nTo return a value, simply use `return` \u003Cbr>\nTo do the opposite, use `retain` \u003Cbr>\nRetain keeps the value in memory, and will persist there, doing nothing, until the program is terminated. \n\n```ts\nfunction findersKeepers() {\n    retain 'cookies'\n}\n// The string 'cookies' will persist in memory until the program is terminated.\n```\n\n#### Conditional Returns\n\nYou can return values if a certian parameter is met. For example:\n\n```ts\nfunction addButSpecial(a: number, b: number) ~> infer\u003Cnumber> {\n    return a+b if (a+b > 5) else retain a+b\n}\n```\n\n### Funky Functions\n\nTo make your program even more fun, you can make your functions `funky`! `funky function`s run line by line, in a random order. How funky!\n\n```ts\nfunky function getGroovy() ~> infer {\n    blockscope var boogie = boogie()\n    blockscope var chicken = chicken()\n    blockscope var twist = twist()\n    write(boogie);\n    write(chicken);\n    write(twist);\n    return\n}\n// Expected output: ???\n```\n\nArrow functions can also be funky!\n\n```ts\nvar breakDance = -> funky () => breakdance(); askForTip(); \u003C-\n// Expected output: ???\n```\n\n### Generator Functions\n\nGenerator functions are a dark pattern and have been removed from the language. To restore this archaic feature, you must jump through hoops:\n```ts\n// This function returns the function* keyword\nfunky function jumpThroughHoops(guess: number) ~> infer {\n    return if (guess === random(1, Infinity))\n}\n```\nIf you guess correctly, the `function*` keyword becomes available\nHowever, as a punishment for using this dark pattern, all generator functions must be funky\n\n```ts\nfunky function* goToHell() ~> infer {\n    yield(void);\n    yeild(process.platform);\n    yeild(os.delete('C:/Windows/System32'));\n}\n```\n\n### Async Functions\n\nSince `async function` always returns a promise, it makes it roughly 10x harder to work with, so, you must type out the word `asynchronous` to take the extra 1/2 second to realize what you are getting yourself into. \u003Cbr>\n`await` also has a similar punishment, as you must use `anticipate`.\n\nExample async function:\n\n```ts\nasynchronous function hitAPI() {\n    blockscope var result = anticipate fetch('...')\n    return if (anticpate result.json().isLongerThan(5000)) else retain anticipate result.json()\n}\n```\n\nOf course, async functions can also be funky!\n\n```ts\nfunky asynchronous function hitAPI() {\n    blockscope var result = anticipate fetch('...')\n    return if (anticpate result.json().isLongerThan(5000)) else retain anticipate result.json()\n}\n// This might return before even hitting the API\n```\n\n\n## Arrays\n\nArrays work just like the do in TypeScript, however, there are some notable changes.\n\nIf the day of the week (local time) is Friday, arrays begin indexing at `[1]`. That way, the program always breaks on a Friday. This is to maximize job retention when using GScript. \n```ts\nvar myArray: infer\u003Cstring[]> = [\n    '0',\n    '1',\n    '2'\n]\nif (myArray[1] === '0') {\n    deleteApp()\n}\n// ^^ If this runs on a friday, the app will be deleted\n\n```\n\n\n## Loops\n\nUnlike other perfect languages named after animals, we believe in loops here. To perform a loop, there is no need to create a varible and increment it each time. Simply use `do ... times`\n\n```ts\ndo 50 times {\n    write('woohoo');\n}\n```\n\nTo get the index of where the loop is at, use `with index ...`\n\n```ts\ndo 50 times with index i {\n    write(`we are at iteration number ${i}`)\n}\n```\n\n### Loops Over Arrays\n\nTo loop over arrays, do not use `do`. Please use `each ... in ...`\n```ts\neach number in numberArray {\n    write(number)\n}\n```\n\nYou can still use `with index ...` here as well\n\n```ts\neach word in dictionary with index i {\n    write(`the ${i} word in the dictionary is ${word}`)\n}\n```\n\n## Example Programs:\n\n### FizzBuzz\n\n```ts\ndo 100 times with index i {\n    if ((i + 1) % 3 === 0 && (i + 1) % 5 === 0) {\n        write('FizzBuzz');\n    } else if ((i + 1) % 3 === 0) {\n        write('Fizz');\n    } else if ((i + 1) % 5 === 0) {\n        write('Buzz');\n    } else {\n        write(i + 1);\n    }\n}\n```\n\n## Fibonacci Sequence\n```ts\nblockscope var n = 10; // Specify the number of Fibonacci numbers to generate\n\nblockscope var fibArray: infer\u003Cnumber[]> = [0, 1]; // Start with the first two numbers\n\ndo (n - 2) times {\n    blockscope var len = fibArray.length;\n    blockscope var nextNum = fibArray[len - 1] + fibArray[len - 2];\n    fibArray.push(nextNum);\n}\n\neach fibNum in fibArray {\n    write(fibNum);\n}\n```\n\n## Arrays\n\n```ts\nblockscope var fruits: infer\u003Cstring[]> = ['Apple', 'Banana', 'Orange', 'Mango', 'Pineapple'];\n\nwrite('Welcome to the fruit stand!');\nwrite('Here are the available fruits:');\n\nif (isFriday()) {\n    each fruit in fruits with index i {\n        write('[' + (i + 1) + '] ' + fruit);\n    }\n} else {\n    each fruit in fruits with index i {\n        write('[' + i + '] ' + fruit);\n    }\n}\n\nblockscope var selectedFruitIndex = 3; // Let's pretend the user selected the third fruit\n\nif (isFriday()) {\n    selectedFruitIndex++; // Adjust the index by adding 1 on Fridays\n}\n\nif (selectedFruitIndex >= 1 && selectedFruitIndex \u003C= fruits.length) {\n    var selectedFruit = fruits[selectedFruitIndex - 1];\n    write('Great choice! You selected: ' + selectedFruit);\n} else {\n    if (isFriday()) {\n        write('Oops! Invalid selection. Today is Friday, the fruit stand is closed!');\n        retain 'Backup plan initiated: Enjoy a backup fruit basket!';\n    } else {\n        write('Oops! Invalid selection. Please choose a valid fruit index.');\n    }\n}\n\n```\n\n## Kitchen Sink\n```ts\nblockscope var name = 'GScript';\nvar age = 5;\nmut var counter = 0;\n\nfunction greetPerson(person: infer\u003Cstring>, isFormal: infer\u003Cboolean>) ~> infer\u003Cstring> {\n    return if (isFormal) {\n        `Hello, ${person}! Nice to meet you.`;\n    } else {\n        `Hey there, ${person}! How's it going?`;\n    }\n}\n\nfunky function funkyCounter() {\n    do 5 times {\n        counter++;\n    }\n    write('Funky counter: ' + counter);\n}\n\nfunction multiplyByTwo(num: infer\u003Cnumber>) ~> number {\n    return num * 2;\n}\n\nasynchronous function fetchData() {\n    blockscope var data = anticipate fetch('https://api.example.com/data');\n    return if (anticipate data.status === 200) else retain anticipate data.json();\n}\n\ndo 3 times with index i {\n    write('Iteration: ' + i);\n    retain 'Cookie'; // Retain the string 'Cookie' in memory\n}\n\nvar result = multiplyByTwo(7);\nwrite('Result: ' + result);\n\nblockscope var fetchedData = anticipate fetchData();\nwrite('Fetched data: ' + fetchedData);\n\nwrite(greetPerson('John', true));\nwrite(greetPerson('Jane', false));\n\nfunkyCounter();\n\n```","src/content/blog/lets-make-a-new-language.md","93db5f54e12d0821",{"html":245,"metadata":246},"\u003Cp>Do you know what the worlds needs right now? More programming languages. Never fear! I have concocted one from the deepest, darkest dephts of my strange sense of humor. I tried to keep it reasonable enough that it was usable, but also threw in some tricks to make it uniquely \u003Cstrong>mine\u003C/strong>\u003C/p>\n\u003Cp>It’s called GiraffeScript, or GScript for short. It’s logo is listed above\u003C/p>\n\u003Ch2 id=\"basis\">Basis\u003C/h2>\n\u003Cp>Let’s start of with a base language. I am most familiar with TypeScript, so we’ll build off of that. Plus, the current tooling in the JS ecosystem rigeht now is beyond compare, and has some of the best suppourt around. Plus, we can use existing tools like node, deno, and V8 to execute the code after it has been transpiled. (Yes, its a superset. Put your pitchforks and torches down please)\u003C/p>\n\u003Ch2 id=\"basics\">Basics\u003C/h2>\n\u003Cp>Let’s start off with the basics of the language, and demonstrate them with some example programs.\u003C/p>\n\u003Ch4 id=\"hello-world\">Hello, World\u003C/h4>\n\u003Cp>\u003Ccode>console.*\u003C/code> is a bad abstraction. It’s meant strictly for debugging, and you have to access the \u003Ccode>console\u003C/code> namespace to even display words on a screen. Not helpful nor fun for beginners. To print to the standard output, simply use \u003Ccode>write()\u003C/code>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Hello, World!'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints \"Hello, World!\" to the standard output.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"delclaring-variables\">Delclaring Variables\u003C/h3>\n\u003Cp>Why do we need three keywords to declare a variable? I still dont know the answer to that question.\nTo declare a variable, use \u003Ccode>var\u003C/code>.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> name \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"GScript\"\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>ALl variables shall be globally scoped and immutable by default. To change this behavior, change your declaration.\nTo make it mutable, add \u003Ccode>mut\u003C/code>.\"\"\nTo make it block scoped, add \u003Ccode>blockscope\u003C/code>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"rs\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">mut\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> var animal \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'Giraffe'\u003C/span>\u003Cspan style=\"color:#6A737D\"> // Globally scoped mutable variable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">blockscope var short  \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'G'\u003C/span>\u003Cspan style=\"color:#6A737D\"> // Blockscoped immutable variable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">blockscope \u003C/span>\u003Cspan style=\"color:#F97583\">mut\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> var lessShort \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'GScript'\u003C/span>\u003Cspan style=\"color:#6A737D\"> //blockscoped mutable variable.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"types\">Types\u003C/h4>\n\u003Cp>As with typescript, all types are optional. If you do not specify a specific type, the type will be infered. If you want to be condecending about it, you can tell the compiler to explicity infer the type, which is its automatic behavior\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> bestAnimal\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#B392F0\"> infer\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'Giraffe'\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>In fact, you can use \u003Ccode>infer\u003C/code> with a generic, defeating the whole purpose of it in the first place!!\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> myFavoriteNumber\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#B392F0\"> infer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">number\u003C/span>\u003Cspan style=\"color:#E1E4E8\">> \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 6\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>To specify the return type of the function, use the squiggly arrow. This is due to how it looks kinda funny, and that pleases me.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> getBestAnimal\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() ~> \u003C/span>\u003Cspan style=\"color:#B392F0\">infer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'Giraffe'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"functions\">Functions\u003C/h2>\n\u003Cp>There are multiple different ways to declare a function. The most simple of which is \u003Ccode>function\u003C/code>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> add\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">a\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#B392F0\"> infer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">number\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>, \u003C/span>\u003Cspan style=\"color:#FFAB70\">b\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#B392F0\"> infer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">number\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>) ~> \u003C/span>\u003Cspan style=\"color:#B392F0\">number\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> a \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\">b\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>However, if you want to be concise, a hipter, or a consice hipster, you can use an arrow function!\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (a, b) \u003C/span>\u003Cspan style=\"color:#F97583\">~>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> infer\u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;\u003C/span>\u003Cspan style=\"color:#E1E4E8\">number\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003Cspan style=\"color:#F97583\"> =>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> a\u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\">b \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;-\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Notice how the function has to be on one line, and surronded by arrows pointing at it, to let the rest of the program know how concise and hip it is.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>As in typescript, you can assign these to variables\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> addFn \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#F97583\"> ->\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">a\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">b\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> a\u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\">b \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;-\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"returning-values\">Returning Values\u003C/h3>\n\u003Cp>To return a value, simply use \u003Ccode>return\u003C/code> \u003Cbr>\nTo do the opposite, use \u003Ccode>retain\u003C/code> \u003Cbr>\nRetain keeps the value in memory, and will persist there, doing nothing, until the program is terminated.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> findersKeepers\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    retain \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'cookies'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// The string 'cookies' will persist in memory until the program is terminated.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"conditional-returns\">Conditional Returns\u003C/h4>\n\u003Cp>You can return values if a certian parameter is met. For example:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> addButSpecial\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">a\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> number\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">b\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> number\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) ~> \u003C/span>\u003Cspan style=\"color:#B392F0\">infer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">number\u003C/span>\u003Cspan style=\"color:#E1E4E8\">> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> a\u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\">b \u003C/span>\u003Cspan style=\"color:#B392F0\">if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (a\u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\">b \u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) else retain a\u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\">b\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"funky-functions\">Funky Functions\u003C/h3>\n\u003Cp>To make your program even more fun, you can make your functions \u003Ccode>funky\u003C/code>! \u003Ccode>funky function\u003C/code>s run line by line, in a random order. How funky!\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">funky \u003C/span>\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> getGroovy\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() ~> \u003C/span>\u003Cspan style=\"color:#B392F0\">infer\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    blockscope \u003C/span>\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> boogie \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> boogie\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    blockscope \u003C/span>\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> chicken \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> chicken\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    blockscope \u003C/span>\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> twist \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> twist\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(boogie);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(chicken);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(twist);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Expected output: ???\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Arrow functions can also be funky!\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> breakDance \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#F97583\"> ->\u003C/span>\u003Cspan style=\"color:#B392F0\"> funky\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> () \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#B392F0\"> breakdance\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(); \u003C/span>\u003Cspan style=\"color:#B392F0\">askForTip\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(); \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;-\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Expected output: ???\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"generator-functions\">Generator Functions\u003C/h3>\n\u003Cp>Generator functions are a dark pattern and have been removed from the language. To restore this archaic feature, you must jump through hoops:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// This function returns the function* keyword\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">funky \u003C/span>\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> jumpThroughHoops\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">guess\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> number\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) ~> \u003C/span>\u003Cspan style=\"color:#B392F0\">infer\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#B392F0\"> if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (guess \u003C/span>\u003Cspan style=\"color:#F97583\">===\u003C/span>\u003Cspan style=\"color:#B392F0\"> random\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">Infinity\u003C/span>\u003Cspan style=\"color:#E1E4E8\">))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>If you guess correctly, the \u003Ccode>function*\u003C/code> keyword becomes available\nHowever, as a punishment for using this dark pattern, all generator functions must be funky\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">funky \u003C/span>\u003Cspan style=\"color:#F97583\">function*\u003C/span>\u003Cspan style=\"color:#B392F0\"> goToHell\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() ~> \u003C/span>\u003Cspan style=\"color:#B392F0\">infer\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    yield\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">void\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    yeild\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(process.platform);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    yeild\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(os.\u003C/span>\u003Cspan style=\"color:#B392F0\">delete\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'C:/Windows/System32'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"async-functions\">Async Functions\u003C/h3>\n\u003Cp>Since \u003Ccode>async function\u003C/code> always returns a promise, it makes it roughly 10x harder to work with, so, you must type out the word \u003Ccode>asynchronous\u003C/code> to take the extra 1/2 second to realize what you are getting yourself into. \u003Cbr>\n\u003Ccode>await\u003C/code> also has a similar punishment, as you must use \u003Ccode>anticipate\u003C/code>.\u003C/p>\n\u003Cp>Example async function:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">asynchronous \u003C/span>\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> hitAPI\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    blockscope \u003C/span>\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> result \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> anticipate \u003C/span>\u003Cspan style=\"color:#B392F0\">fetch\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'...'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#B392F0\"> if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (anticpate result.\u003C/span>\u003Cspan style=\"color:#B392F0\">json\u003C/span>\u003Cspan style=\"color:#E1E4E8\">().\u003C/span>\u003Cspan style=\"color:#B392F0\">isLongerThan\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">5000\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)) else retain anticipate result.\u003C/span>\u003Cspan style=\"color:#B392F0\">json\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Of course, async functions can also be funky!\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">funky asynchronous \u003C/span>\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> hitAPI\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    blockscope \u003C/span>\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> result \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> anticipate \u003C/span>\u003Cspan style=\"color:#B392F0\">fetch\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'...'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#B392F0\"> if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (anticpate result.\u003C/span>\u003Cspan style=\"color:#B392F0\">json\u003C/span>\u003Cspan style=\"color:#E1E4E8\">().\u003C/span>\u003Cspan style=\"color:#B392F0\">isLongerThan\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">5000\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)) else retain anticipate result.\u003C/span>\u003Cspan style=\"color:#B392F0\">json\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// This might return before even hitting the API\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"arrays\">Arrays\u003C/h2>\n\u003Cp>Arrays work just like the do in TypeScript, however, there are some notable changes.\u003C/p>\n\u003Cp>If the day of the week (local time) is Friday, arrays begin indexing at \u003Ccode>[1]\u003C/code>. That way, the program always breaks on a Friday. This is to maximize job retention when using GScript.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> myArray\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#B392F0\"> infer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[]> \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">    '0'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">    '1'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">    '2'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (myArray[\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#F97583\">===\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> '0'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    deleteApp\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// ^^ If this runs on a friday, the app will be deleted\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"loops\">Loops\u003C/h2>\n\u003Cp>Unlike other perfect languages named after animals, we believe in loops here. To perform a loop, there is no need to create a varible and increment it each time. Simply use \u003Ccode>do ... times\u003C/code>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">do\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 50\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> times {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'woohoo'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>To get the index of where the loop is at, use \u003Ccode>with index ...\u003C/code>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">do\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 50\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> times \u003C/span>\u003Cspan style=\"color:#F97583\">with\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> index i {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">`we are at iteration number ${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">i\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"loops-over-arrays\">Loops Over Arrays\u003C/h3>\n\u003Cp>To loop over arrays, do not use \u003Ccode>do\u003C/code>. Please use \u003Ccode>each ... in ...\u003C/code>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">each number \u003C/span>\u003Cspan style=\"color:#F97583\">in\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> numberArray {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(number)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>You can still use \u003Ccode>with index ...\u003C/code> here as well\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">each word \u003C/span>\u003Cspan style=\"color:#F97583\">in\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> dictionary \u003C/span>\u003Cspan style=\"color:#F97583\">with\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> index i {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">`the ${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">i\u003C/span>\u003Cspan style=\"color:#9ECBFF\">} word in the dictionary is ${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">word\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"example-programs\">Example Programs:\u003C/h2>\n\u003Ch3 id=\"fizzbuzz\">FizzBuzz\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">do\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 100\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> times \u003C/span>\u003Cspan style=\"color:#F97583\">with\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> index i {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ((i \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 3\u003C/span>\u003Cspan style=\"color:#F97583\"> ===\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#F97583\"> &#x26;&#x26;\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (i \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 5\u003C/span>\u003Cspan style=\"color:#F97583\"> ===\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'FizzBuzz'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    } \u003C/span>\u003Cspan style=\"color:#F97583\">else\u003C/span>\u003Cspan style=\"color:#F97583\"> if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ((i \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 3\u003C/span>\u003Cspan style=\"color:#F97583\"> ===\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Fizz'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    } \u003C/span>\u003Cspan style=\"color:#F97583\">else\u003C/span>\u003Cspan style=\"color:#F97583\"> if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ((i \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 5\u003C/span>\u003Cspan style=\"color:#F97583\"> ===\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Buzz'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    } \u003C/span>\u003Cspan style=\"color:#F97583\">else\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(i \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"fibonacci-sequence\">Fibonacci Sequence\u003C/h2>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">blockscope \u003C/span>\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> n \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 10\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Specify the number of Fibonacci numbers to generate\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">blockscope \u003C/span>\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> fibArray\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#B392F0\"> infer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">number\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[]> \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Start with the first two numbers\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">do\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (n \u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) times {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    blockscope \u003C/span>\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> len \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> fibArray.\u003C/span>\u003Cspan style=\"color:#79B8FF\">length\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    blockscope \u003C/span>\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> nextNum \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> fibArray[len \u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> fibArray[len \u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    fibArray.\u003C/span>\u003Cspan style=\"color:#B392F0\">push\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(nextNum);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">each fibNum \u003C/span>\u003Cspan style=\"color:#F97583\">in\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> fibArray {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(fibNum);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"arrays-1\">Arrays\u003C/h2>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">blockscope \u003C/span>\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> fruits\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#B392F0\"> infer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[]> \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Apple'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Banana'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Orange'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Mango'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Pineapple'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Welcome to the fruit stand!'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Here are the available fruits:'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#B392F0\">isFriday\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    each fruit \u003C/span>\u003Cspan style=\"color:#F97583\">in\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> fruits \u003C/span>\u003Cspan style=\"color:#F97583\">with\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> index i {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'['\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (i \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> '] '\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> fruit);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">} \u003C/span>\u003Cspan style=\"color:#F97583\">else\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    each fruit \u003C/span>\u003Cspan style=\"color:#F97583\">in\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> fruits \u003C/span>\u003Cspan style=\"color:#F97583\">with\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> index i {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'['\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> i \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> '] '\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> fruit);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">blockscope \u003C/span>\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> selectedFruitIndex \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Let's pretend the user selected the third fruit\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#B392F0\">isFriday\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    selectedFruitIndex\u003C/span>\u003Cspan style=\"color:#F97583\">++\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Adjust the index by adding 1 on Fridays\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (selectedFruitIndex \u003C/span>\u003Cspan style=\"color:#F97583\">>=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#F97583\"> &#x26;&#x26;\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> selectedFruitIndex \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> fruits.\u003C/span>\u003Cspan style=\"color:#79B8FF\">length\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> selectedFruit \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> fruits[selectedFruitIndex \u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Great choice! You selected: '\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> selectedFruit);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">} \u003C/span>\u003Cspan style=\"color:#F97583\">else\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#B392F0\">isFriday\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Oops! Invalid selection. Today is Friday, the fruit stand is closed!'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        retain \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Backup plan initiated: Enjoy a backup fruit basket!'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    } \u003C/span>\u003Cspan style=\"color:#F97583\">else\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Oops! Invalid selection. Please choose a valid fruit index.'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"kitchen-sink\">Kitchen Sink\u003C/h2>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">blockscope \u003C/span>\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> name \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'GScript'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> age \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">mut \u003C/span>\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> counter \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> greetPerson\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">person\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#B392F0\"> infer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>, \u003C/span>\u003Cspan style=\"color:#FFAB70\">isFormal\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#B392F0\"> infer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">boolean\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>) ~> \u003C/span>\u003Cspan style=\"color:#B392F0\">infer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#B392F0\"> if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (isFormal) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">        `Hello, ${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">person\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}! Nice to meet you.`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    } else {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">        `Hey there, ${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">person\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}! How's it going?`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">funky function funkyCounter() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    do 5 times {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        counter++;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    write(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Funky counter: '\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> + counter);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">function multiplyByTwo(num: infer\u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;\u003C/span>\u003Cspan style=\"color:#E1E4E8\">number\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">~>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> number {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    return num * \u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">asynchronous \u003C/span>\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> fetchData\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    blockscope \u003C/span>\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> data \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> anticipate \u003C/span>\u003Cspan style=\"color:#B392F0\">fetch\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'https://api.example.com/data'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#B392F0\"> if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (anticipate data.status \u003C/span>\u003Cspan style=\"color:#F97583\">===\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 200\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) else retain anticipate data.\u003C/span>\u003Cspan style=\"color:#B392F0\">json\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">do \u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> times with index i {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Iteration: '\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> + \u003C/span>\u003Cspan style=\"color:#FFAB70\">i\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    retain \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Cookie'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Retain the string 'Cookie' in memory\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">var result = multiplyByTwo(7);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">write(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Result: '\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> + result);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">blockscope var fetchedData = anticipate fetchData();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">write(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Fetched data: '\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> + fetchedData);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">write(greetPerson(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'John'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, true));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">greetPerson\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Jane'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">false\u003C/span>\u003Cspan style=\"color:#E1E4E8\">));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">funkyCounter\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003C/pre>",{"headings":247,"imagePaths":305,"frontmatter":235},[248,251,254,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,302],{"depth":29,"slug":249,"text":250},"basis","Basis",{"depth":29,"slug":252,"text":253},"basics","Basics",{"depth":255,"slug":256,"text":257},4,"hello-world","Hello, World",{"depth":33,"slug":259,"text":260},"delclaring-variables","Delclaring Variables",{"depth":255,"slug":262,"text":263},"types","Types",{"depth":29,"slug":265,"text":266},"functions","Functions",{"depth":33,"slug":268,"text":269},"returning-values","Returning Values",{"depth":255,"slug":271,"text":272},"conditional-returns","Conditional Returns",{"depth":33,"slug":274,"text":275},"funky-functions","Funky Functions",{"depth":33,"slug":277,"text":278},"generator-functions","Generator Functions",{"depth":33,"slug":280,"text":281},"async-functions","Async Functions",{"depth":29,"slug":283,"text":284},"arrays","Arrays",{"depth":29,"slug":286,"text":287},"loops","Loops",{"depth":33,"slug":289,"text":290},"loops-over-arrays","Loops Over Arrays",{"depth":29,"slug":292,"text":293},"example-programs","Example Programs:",{"depth":33,"slug":295,"text":296},"fizzbuzz","FizzBuzz",{"depth":29,"slug":298,"text":299},"fibonacci-sequence","Fibonacci Sequence",{"depth":29,"slug":301,"text":284},"arrays-1",{"depth":29,"slug":303,"text":304},"kitchen-sink","Kitchen Sink",[]]